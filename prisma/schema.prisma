// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
model Users {
  id          String       @id @default(cuid())
  userName    String
  email       String       @unique
  password    String
  sessions    Session[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  isDeleted   Boolean      @default(false)
  news        News[]
  role    String
  token String?
 permissions Permissions[] @relation("UserPermissions")

}



model Permissions{
  id          String       @id @default(cuid())
  page String
  actions String
  users      Users[]   @relation("UserPermissions")
   @@unique([page, actions])
}
model News{
id String @id @default(cuid())
headline String 
title String @db.Text
img String?
user   Users  @relation(fields:[userId],references:[id],onDelete: Cascade, onUpdate: Cascade)
userId String
department Department @relation(fields:[depID],references:[id],onDelete: Cascade, onUpdate: Cascade)
depID String
 isDeleted Boolean   @default(false)

}
model Session {
  id    String   @id @default(cuid())
  expirationDate DateTime
  token String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user   Users   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique

}
model Department{
  id    String   @id @default(cuid())
  depName String
  createdAt DateTime    @default(now())
  updatedAt DateTime  @updatedAt
  isDeleted Boolean   @default(false)
  staffs Staff[]
  doctors Doctor[]
  news News[]
  }

model Doctor{
  id    String   @id @default(cuid())
  doctorName String @unique
  phone String?
  specialist String
  department Department @relation(fields:[depID],references:[id],onDelete: Cascade, onUpdate: Cascade)
  depID String

  createdAt DateTime    @default(now())
  updatedAt DateTime  @updatedAt
  isDeleted Boolean   @default(false)
  patient Oppontement[]
 weekwork Shift[]
 img String?
 information String? @db.Text

}
  model Staff{
  id    String   @id @default(cuid())
  staffName String
  phone String?
  department Department @relation(fields:[depID],references:[id],onDelete: Cascade, onUpdate: Cascade)
  depID String 
  createdAt DateTime    @default(now())
  updatedAt DateTime  @updatedAt
  isDeleted Boolean   @default(false)
  }
model Patient{
  id    String   @id @default(cuid())
 patName String
  address  String?
  gender Gender?
  doctorBack DateTime?
  phone String
  createdAt DateTime    @default(now())
  updatedAt DateTime  @updatedAt
  isDeleted Boolean   @default(false)
  doctor Oppontement[]
}
enum Gender{
  female
  male

}
model Oppontement{
  doctor Doctor @relation(fields:[docID],references:[id],onDelete: Cascade, onUpdate: Cascade)
  docID String 
  patient Patient @relation(fields:[patID],references:[id],onDelete: Cascade, onUpdate: Cascade)
  patID String 
  createdAt DateTime    @default(now())
  date DateTime
  updatedAt DateTime  @updatedAt
  isDeleted Boolean   @default(false)
   @@id([docID, patID])
}

model Shift{
  id   String     @id @default(cuid())
  day String
   startTime String
  endTime   String
  doctor Doctor? @relation(fields:[docID],references:[id],onDelete:Cascade,onUpdate:Cascade)
  docID String
}

//string Day {
//  الأحد
//  الإثنين
//  الثلاثاء
//  الأربعاء
//  الخميس
//  الجمعة
//  السبت
//}